# backend/backend/settings.py

"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

from captcha.helpers import word_challenge, math_challenge, random_char_challenge

########################################################################################################################
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
########################################################################################################################

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/
########################################################################################################################
# Секретный ключ, используемый для подписи куки, токенов и других объектов,
# используемых для безопасности приложения.
SECRET_KEY = 'django-insecure-=4*#)_rlbkc(3)xqtw$*u^=0@%@i!*l#kj&&m7k_#y6ojzv@_6'
########################################################################################################################

########################################################################################################################
# Определяет, будет ли включен режим отладки.
# Не следует использовать этот режим в продакшн-сервере.
DEBUG = True
########################################################################################################################

########################################################################################################################
# ALLOWED_HOSTS определяет список хостов/доменов, с которых разрешено обращаться к серверу Django.
# Использование ['*'] означает, что сервер будет принимать запросы с любых хостов.
# Это удобно для разработки, но небезопасно для использования в продакшене,
# так как открывает сервер для потенциальных атак.
# В продакшене следует указать конкретные домены, например ['example.com', 'www.example.com', 'localhost', '127.0.0.1']
ALLOWED_HOSTS = ['*']
########################################################################################################################

# Список приложений, которые используются в проекте.
########################################################################################################################
INSTALLED_APPS = [
    'django.contrib.admin',  # Приложение административной панели Django
    'django.contrib.auth',  # Приложение для аутентификации пользователей Django
    'django.contrib.contenttypes',  # Приложение для работы с контентными типами Django
    'django.contrib.sessions',  # Приложение для работы с сессиями Django
    'django.contrib.messages',  # Приложение для работы с сообщениями Django
    'django.contrib.staticfiles',  # Приложение для работы со статическими файлами Django

    'django.contrib.sites',  # Приложение для поддержки многосайтовой конфигурации Django

    'captcha',  # Приложение для добавления капчи в формы для защиты от спама и ботов
    'django_ckeditor_5',  # Приложение для интеграции редактора CKEditor 5 с Django
    "debug_toolbar",  # Приложение для отладочной панели Django Debug Toolbar
    'taggit',  # Приложение для добавления тегов к объектам моделей в Django.
    'mptt',  # Приложение MPTT для создания древовидной модели категорий для статей

    'modules.blog.apps.BlogConfig',  # Пользовательское приложение блога
    'modules.system.apps.SystemConfig',  # Пользовательское приложение системы
    'modules.services',  # Пользовательское приложение услуг
]
SITE_ID = 1  # Идентификатор сайта, который определяет текущий сайт в многосайтовой конфигурации Django.
########################################################################################################################

########################################################################################################################
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # Middleware для отображения отладочной панели.
    'debug_toolbar.middleware.DebugToolbarMiddleware',

]
########################################################################################################################

########################################################################################################################
ROOT_URLCONF = 'backend.urls'
########################################################################################################################

########################################################################################################################
# Определяем список настроек для шаблонов Django.
TEMPLATES = [
    {
        # Указываем бэкенд для обработки шаблонов Django.
        'BACKEND': 'django.template.backends.django.DjangoTemplates',

        # Задаем директории, в которых будут искаться шаблоны.
        'DIRS': [BASE_DIR / 'templates'],

        # Указываем, что шаблоны могут быть найдены внутри приложений (app directories).
        'APP_DIRS': True,

        # Дополнительные настройки для шаблонов Django.
        'OPTIONS': {
            # Контекстные процессоры добавляют переменные в контекст каждого шаблона.
            'context_processors': [
                'django.template.context_processors.debug',  # Добавляет переменную "debug".
                'django.template.context_processors.request',  # Добавляет объект запроса.
                'django.contrib.auth.context_processors.auth',  # Добавляет информацию о текущем пользователе.
                'django.contrib.messages.context_processors.messages',  # Добавляет переменные сообщений.
            ],
        },
    },
]
########################################################################################################################

########################################################################################################################
WSGI_APPLICATION = 'backend.wsgi.application'
########################################################################################################################

# Этот блок комментария отделяет настройки для работы с sqlite3
########################################################################################################################
# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# Раздел настроек для базы данных по умолчанию в Django
# DATABASES = {
#     'default': {  # Настройки для базы данных по умолчанию
#         'ENGINE': 'django.db.backends.sqlite3',  # Используем движок SQLite3
#         'NAME': BASE_DIR / 'db.sqlite3',  # Имя файла базы данных, расположенного в корневой директории проекта
#     }
# }
########################################################################################################################

# Этот блок комментария отделяет настройки для работы с PostgreSQL
########################################################################################################################
DATABASES = {
    'default': {  # Настройки для базы данных по умолчанию
        'ENGINE': 'django.db.backends.postgresql',  # Используем движок PostgreSQL
        'NAME': 'backend_bd',  # Имя базы данных PostgreSQL
        'USER': 'backend',  # Имя пользователя для подключения к PostgreSQL
        'PASSWORD': '1111',  # Пароль для подключения к PostgreSQL (необходимо заменить на реальный пароль)
        'HOST': 'localhost',  # Хост, на котором размещена база данных PostgreSQL (в данном случае локальный компьютер)
        'PORT': 5432,  # Порт, на котором работает PostgreSQL (по умолчанию 5432)
    }
}
########################################################################################################################


########################################################################################################################
# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
########################################################################################################################


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/
LANGUAGE_CODE = 'ru-Ru'

TIME_ZONE = 'Europe/Kyiv'

USE_I18N = True

USE_TZ = True
########################################################################################################################

# Настройка статических и медиафайлов
########################################################################################################################
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

# Определяем URL-путь, по которому будут обслуживаться статические файлы на веб-сайте.
STATIC_URL = '/static/'

# # Определяем директорию, куда будут собираться статические файлы для развёртывания веб-сайта.
STATIC_ROOT = (BASE_DIR / 'staticfiles')

STATICFILES_DIRS = [BASE_DIR / 'static', ]

# Определяем директорию, где будут сохраняться загруженные медиафайлы, такие как изображения и видео.
MEDIA_ROOT = (BASE_DIR / 'media')

# Определяем URL-путь, по которому будут доступны загруженные медиафайлы на веб-сайте.
MEDIA_URL = '/media/'
########################################################################################################################

########################################################################################################################
# Список внутренних IP-адресов, с которых будет доступен отладочный панель.
INTERNAL_IPS: list[str] = [
    # Добавляем локальный IP-адрес, который обычно используется при разработке на локальной машине.
    "127.0.0.1",
    # Дополнительные IP-адреса могут быть добавлены сюда по мере необходимости.
]
########################################################################################################################


########################################################################################################################
# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
########################################################################################################################

# Email settings
########################################################################################################################
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.yandex.ru'
EMAIL_PORT = 465
EMAIL_USE_SSL = True

EMAIL_HOST_USER = 'Shiko3232@yandex.ru'
EMAIL_HOST_PASSWORD = 'erfauhhjpxmxcqth'

DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
EMAIL_SERVER = EMAIL_HOST_USER
EMAIL_ADMIN = EMAIL_HOST_USER

RECIPIENT_ADDRESS = EMAIL_HOST_USER
########################################################################################################################

# django-recaptcha settings
########################################################################################################################
RECAPTCHA_PUBLIC_KEY = '6LfllfgpAAAAAOtyxCZE189yVf-aH6MoNCpt9a4Y'
RECAPTCHA_PRIVATE_KEY = '6LfllfgpAAAAAOL1PgL4m_3dBTfRMbDqQ1ETWa41'

CAPTCHA_FONT_PATH = 'static/fonts/VeraSeBd.ttf'
CAPTCHA_IMAGE_SIZE = (150, 40)
CAPTCHA_LENGTH = 6
CAPTCHA_NOISE_FUNCTIONS = ('captcha.helpers.noise_arcs',)  # 'captcha.helpers.noise_dots'
CAPTCHA_LETTER_ROTATION = (-10, 10)
CAPTCHA_FOREGROUND_COLOR = '#008000'
CAPTCHA_BACKGROUND_COLOR = '#FFFFFF'
CAPTCHA_CHALLENGE_FUNCT = 'captcha.helpers.math_challenge'
# CAPTCHA_CHALLENGE_FUNCT = 'captcha.helpers.random_char_challenge'
# CAPTCHA_CHALLENGE_FUNCT = 'captcha.helpers.word_challenge'
########################################################################################################################

# Настройки для CKEditor
########################################################################################################################

# Определяем настраиваемую цветовую палитру для редактора
customColorPalette = [
    {
        'color': 'hsl(4, 90%, 58%)',  # Красный цвет
        'label': 'Red'  # Метка цвета
    },
    {
        'color': 'hsl(340, 82%, 52%)',  # Розовый цвет
        'label': 'Pink'  # Метка цвета
    },
    {
        'color': 'hsl(291, 64%, 42%)',  # Фиолетовый цвет
        'label': 'Purple'  # Метка цвета
    },
    {
        'color': 'hsl(262, 52%, 47%)',  # Темно-фиолетовый цвет
        'label': 'Deep Purple'  # Метка цвета
    },
    {
        'color': 'hsl(231, 48%, 48%)',  # Индиго
        'label': 'Indigo'  # Метка цвета
    },
    {
        'color': 'hsl(207, 90%, 54%)',  # Синий цвет
        'label': 'Blue'  # Метка цвета
    },
]

CKEDITOR_5_CUSTOM_CSS = 'path_to.css'  # Путь к пользовательскому CSS (необязательно)
# CKEDITOR_5_FILE_STORAGE = 'storage_app.CustomStorage'  # Путь к пользовательскому хранилищу файлов (необязательно)

# Конфигурация CKEditor
CKEDITOR_5_CONFIGS = {
    'default': {  # Конфигурация по умолчанию
        'toolbar': ['heading', '|', 'bold', 'italic', 'link',
                    'bulletedList', 'numberedList', 'blockQuote', 'imageUpload'],  # Инструменты на панели
    },
    'extends': {  # Расширенная конфигурация
        'blockToolbar': [
            'paragraph', 'heading1', 'heading2', 'heading3',  # Блоки заголовков и параграфов
            '|',
            'bulletedList', 'numberedList',  # Списки
            '|',
            'blockQuote',  # Цитата
        ],
        # Полный набор инструментов на панели
        'toolbar': ['heading', '|', 'outdent', 'indent', '|', 'bold', 'italic', 'link', 'underline', 'strikethrough',
                    'code', 'subscript', 'superscript', 'highlight', '|', 'codeBlock', 'sourceEditing', 'insertImage',
                    'bulletedList', 'numberedList', 'todoList', '|', 'blockQuote', 'imageUpload', '|',
                    'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor', 'mediaEmbed', 'removeFormat',
                    'insertTable'],
        'image': {  # Конфигурация для изображений
            'toolbar': ['imageTextAlternative', '|', 'imageStyle:alignLeft',
                        'imageStyle:alignRight', 'imageStyle:alignCenter', 'imageStyle:side', '|'],
            # Панель инструментов для изображений
            'styles': [
                'full',  # Полный размер
                'side',  # Боковая
                'alignLeft',  # Выровнять влево
                'alignRight',  # Выровнять вправо
                'alignCenter',  # Выровнять по центру
            ]
        },
        'table': {  # Конфигурация для таблиц
            'contentToolbar': ['tableColumn', 'tableRow', 'mergeTableCells',
                               'tableProperties', 'tableCellProperties'],
            # Панель инструментов для таблиц
            'tableProperties': {
                'borderColors': customColorPalette,  # Настраиваемые цвета границ таблиц
                'backgroundColors': customColorPalette  # Настраиваемые цвета фона таблиц
            },
            'tableCellProperties': {
                'borderColors': customColorPalette,  # Настраиваемые цвета границ ячеек таблиц
                'backgroundColors': customColorPalette  # Настраиваемые цвета фона ячеек таблиц
            }
        },
        'heading': {  # Конфигурация для заголовков
            'options': [
                # Параграф
                {'model': 'paragraph', 'title': 'Paragraph', 'class': 'ck-heading_paragraph'},
                # Заголовок 1
                {'model': 'heading1', 'view': 'h1', 'title': 'Heading 1', 'class': 'ck-heading_heading1'},
                # Заголовок 2
                {'model': 'heading2', 'view': 'h2', 'title': 'Heading 2', 'class': 'ck-heading_heading2'},
                # Заголовок 3
                {'model': 'heading3', 'view': 'h3', 'title': 'Heading 3', 'class': 'ck-heading_heading3'}
            ]
        }
    },
    'list': {  # Конфигурация для списков
        'properties': {
            'styles': 'true',  # Разрешить стили для списков
            'startIndex': 'true',  # Разрешить изменение начального индекса списков
            'reversed': 'true',  # Разрешить изменение порядка списков на обратный
        }
    }
}

########################################################################################################################
