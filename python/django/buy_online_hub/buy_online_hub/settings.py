"""
Django settings for buy_online_hub project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

########################################################################################################################
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
########################################################################################################################

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

########################################################################################################################
# Секретный ключ, используемый для подписи куки, токенов и других объектов,
# используемых для безопасности приложения.
SECRET_KEY = 'django-insecure-5)&jg5%3pw1o7t5@t*!#m)k=@87#6#*d+xkq$5k7wfpv8=zeyd'
########################################################################################################################

########################################################################################################################
# Определяет, будет ли включен режим отладки.
# Не следует использовать этот режим в продакшн-сервере.
DEBUG = True
########################################################################################################################

########################################################################################################################
# ALLOWED_HOSTS определяет список хостов/доменов, с которых разрешено обращаться к серверу Django.
# Использование ['*'] означает, что сервер будет принимать запросы с любых хостов.
# Это удобно для разработки, но небезопасно для использования в продакшене,
# так как открывает сервер для потенциальных атак.
# В продакшене следует указать конкретные домены, например ['example.com', 'www.example.com', 'localhost', '127.0.0.1']
ALLOWED_HOSTS = ['*']
########################################################################################################################

# Список приложений, которые используются в проекте.
########################################################################################################################
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.postgres',

    "debug_toolbar",

    'main',
    'goods',
    'users',
]
########################################################################################################################

########################################################################################################################
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # Middleware для отображения отладочной панели.
    'debug_toolbar.middleware.DebugToolbarMiddleware',

]
########################################################################################################################

########################################################################################################################
ROOT_URLCONF = 'buy_online_hub.urls'
########################################################################################################################

########################################################################################################################
# Определяем список настроек для шаблонов Django.
TEMPLATES = [
    {
        # Указываем бэкенд для обработки шаблонов Django.
        'BACKEND': 'django.template.backends.django.DjangoTemplates',

        # Задаем директории, в которых будут искаться шаблоны.
        'DIRS': [BASE_DIR / 'templates'],

        # Указываем, что шаблоны могут быть найдены внутри приложений (app directories).
        'APP_DIRS': True,

        # Дополнительные настройки для шаблонов Django.
        'OPTIONS': {
            # Контекстные процессоры добавляют переменные в контекст каждого шаблона.
            'context_processors': [
                'django.template.context_processors.debug',  # Добавляет переменную "debug".
                'django.template.context_processors.request',  # Добавляет объект запроса.
                'django.contrib.auth.context_processors.auth',  # Добавляет информацию о текущем пользователе.
                'django.contrib.messages.context_processors.messages',  # Добавляет переменные сообщений.
            ],
        },
    },
]
########################################################################################################################

########################################################################################################################
WSGI_APPLICATION = 'buy_online_hub.wsgi.application'
########################################################################################################################

########################################################################################################################
# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'home',
        'USER': 'home',
        'PASSWORD': 'home',
        'HOST': 'localhost',
        'PORT': '5432',

    }
}
########################################################################################################################

########################################################################################################################
# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
########################################################################################################################

########################################################################################################################
# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/
LANGUAGE_CODE = 'ru-Ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True
########################################################################################################################

########################################################################################################################
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/
# Определяет URL-префикс, который будет использоваться для обслуживания статических файлов (таких как CSS,
# JavaScript и изображения) в режиме разработки.
STATIC_URL = 'static/'

# Определяет список директорий, где Django будет искать статические файлы при обработке запросов к URL-адресам,
# начинающимся с префикса, указанного в STATIC_URL. В данном случае, Django будет искать статические файлы в папке
# static, находящейся в корневой директории проекта (BASE_DIR).
STATICFILES_DIRS: list[Path] = [BASE_DIR / 'static']

# Определяем URL-путь, по которому будут доступны загруженные медиафайлы на веб-сайте.
MEDIA_URL = 'media/'

# Определяем директорию, где будут сохраняться загруженные медиафайлы, такие как изображения и видео.
MEDIA_ROOT: Path = BASE_DIR / 'media'
########################################################################################################################

########################################################################################################################
# Список внутренних IP-адресов, с которых будет доступен отладочный панель.
INTERNAL_IPS: list[str] = [
    # Добавляем локальный IP-адрес, который обычно используется при разработке на локальной машине.
    "127.0.0.1",
    # Дополнительные IP-адреса могут быть добавлены сюда по мере необходимости.
]
########################################################################################################################

########################################################################################################################
# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = 'users.User'
########################################################################################################################
