"""В программировании теги - это метаданные, которые добавляются к объектам для описания их свойств или категоризации.
Теги могут помочь упростить и ускорить поиск и сортировку объектов по определенным критериям.
Рассмотрим пример: допустим, у нас есть веб-сайт, на котором пользователи могут публиковать свои статьи. Чтобы
организовать эти статьи и сделать их более доступными для пользователей, мы можем добавить теги, описывающие
содержание каждой статьи. Например, для статьи о программировании мы можем добавить теги "Python", "JavaScript" и
"Web development". Для статьи о кулинарии мы можем добавить теги "рецепты", "веганство" и "итальянская кухня". Это
позволит пользователям легко находить статьи, которые соответствуют их интересам.

В приведенном выше коде класс Song также использует теги для категоризации песен. В данном случае мы добавляем теги
"Americana" и "Country" к объекту Song, чтобы указать, что эта песня относится к жанрам "Американа" и "Кантри".

Теги могут быть полезны во многих других областях программирования, например, для категоризации товаров в
интернет-магазине или для описания содержания электронных писем в почтовом клиенте.
"""


class Song:
    # конструктор __init__, который инициализирует атрибуты artist (имя артиста), song (название песни) и tags (список
    # тегов). Начально список тегов инициализируется пустым.
    def __init__(self, artist, song):
        self.artist = artist  # Имя артиста
        self.song = song  # Название песни
        self.tags = []  # Пустой список тегов

    # Метод add_tags используется для добавления тегов к списку tags. Он принимает переменное количество аргументов
    # (*args), что позволяет передавать любое количество тегов. Внутри метода переданные теги добавляются в список tags
    # с помощью метода extend.
    def add_tags(self, *args):
        self.tags.extend(args)  # Добавляет переданные теги в список тегов


########################################################################################################################

# Создание экземпляра класса Song с аргументами "Shakey Graves" и "Roll the Bones"
song1 = Song("Shakey Graves", "Roll the Bones")

# Вывод атрибутов объекта song1
print(song1.artist)  # Shakey Graves
print(song1.song)  # Roll the Bones
print(song1.tags)  # []

# Вызов метода add_tags у объекта song1 с передачей тегов "Americana" и "Country"
song1.add_tags("Americana", "Country")

# Вывод атрибутов объекта song1 после добавления тегов
print(song1.artist)  # Shakey Graves
print(song1.song)  # Roll the Bones
print(song1.tags)  # ['Americana', 'Country']
