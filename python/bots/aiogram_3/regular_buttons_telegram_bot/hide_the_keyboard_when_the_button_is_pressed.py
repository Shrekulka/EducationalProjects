# regular_buttons_telegram_bot/hide_the_keyboard_when_the_button_is_pressed.py

import asyncio
import traceback

from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart
from aiogram.types import KeyboardButton, ReplyKeyboardMarkup, Message

from config_data.config import Config
from logger_config import logger


# –§—É–Ω–∫—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main() -> None:
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é config
    config: Config = Config()

    logger.info("Initializing bot...")
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
    bot: Bot = Bot(token=config.tg_bot.token)
    dp: Dispatcher = Dispatcher()
    logger.info("Bot initialized successfully.")
    ####################################################################################################################
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –∫–Ω–æ–ø–æ–∫
    button_1: KeyboardButton = KeyboardButton(text='–°–æ–±–∞–∫ ü¶Æ')
    button_2: KeyboardButton = KeyboardButton(text='–û–≥—É—Ä—Ü–æ–≤ ü•í')
    button_3 = KeyboardButton(text='–ú—ã—à–µ–π üêÅ')
    button_4 = KeyboardButton(text='–ï–∂–µ–π ü¶î')

    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –¥–æ–±–∞–≤–ª—è—è –≤ –Ω–µ–≥–æ –∫–Ω–æ–ø–∫–∏
    keyboard = ReplyKeyboardMarkup(
        # –ö–Ω–æ–ø–∫–∏ —Ä–∞—Å–ø–æ–ª–∞–≥–∞—é—Ç—Å—è –≤ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–º —Ä—è–¥—É.
        keyboard=[[button_1, button_2, button_3, button_4]],
        # –ü–∞—Ä–∞–º–µ—Ç—Ä resize_keyboard —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ True –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –∫–Ω–æ–ø–æ–∫.
        resize_keyboard=True,
        # –ü–∞—Ä–∞–º–µ—Ç—Ä one_time_keyboard —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ True, —á—Ç–æ–±—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–∫—Ä—ã–≤–∞–ª–∞—Å—å –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è, –Ω–æ –æ—Å—Ç–∞–≤–∞–ª–∞—Å—å
        # –¥–æ—Å—Ç—É–ø–Ω–æ–π –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞.
        one_time_keyboard=True)

    ####################################################################################################################
    # –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/start" –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤ —á–∞—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    @dp.message(CommandStart())
    async def process_start_command(message: Message):
        await message.answer(
            text="–ß–µ–≥–æ –∫–æ—à–∫–∏ –±–æ—è—Ç—Å—è –±–æ–ª—å—à–µ?",
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º "–ß–µ–≥–æ –∫–æ—à–∫–∏ –±–æ—è—Ç—Å—è –±–æ–ª—å—à–µ?" –∏ –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º –∫ –Ω–µ–º—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É `keyboard`.
            reply_markup=keyboard)

    # –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –æ—Ç–≤–µ—Ç "–°–æ–±–∞–∫ ü¶Æ"
    @dp.message(F.text == '–°–æ–±–∞–∫ ü¶Æ')
    async def process_dog_answer(message: Message):
        await message.answer(text="–î–∞, –Ω–µ—Å–æ–º–Ω–µ–Ω–Ω–æ, –∫–æ—à–∫–∏ –±–æ—è—Ç—Å—è —Å–æ–±–∞–∫. –ù–æ –≤—ã –≤–∏–¥–µ–ª–∏ –∫–∞–∫ –æ–Ω–∏ –±–æ—è—Ç—Å—è –æ–≥—É—Ä—Ü–æ–≤?")

    # –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –æ—Ç–≤–µ—Ç "–û–≥—É—Ä—Ü–æ–≤ ü•í"
    @dp.message(F.text == '–û–≥—É—Ä—Ü–æ–≤ ü•í')
    async def process_cucumber_answer(message: Message):
        await message.answer(text="–î–∞, –∏–Ω–æ–≥–¥–∞ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ –æ–≥—É—Ä—Ü–æ–≤ –∫–æ—à–∫–∏ –±–æ—è—Ç—Å—è –±–æ–ª—å—à–µ")

    # –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –æ—Ç–≤–µ—Ç "–ú—ã—à–µ–π üêÅ"
    @dp.message(F.text == '–ú—ã—à–µ–π üêÅ')
    async def process_cucumber_answer(message: Message):
        await message.answer(text="–î–∞, –∏–Ω–æ–≥–¥–∞ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ –º—ã—à–µ–π —Å–æ–±–∞–∫–∏ –±–æ—è—Ç—Å—è –±–æ–ª—å—à–µ")

    # –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –æ—Ç–≤–µ—Ç "–ï–∂–µ–π ü¶î"
    @dp.message(F.text == '–ï–∂–µ–π ü¶î')
    async def process_cucumber_answer(message: Message):
        await message.answer(text="–î–∞, –∏–Ω–æ–≥–¥–∞ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ –µ–∂–µ–π —Å–æ–±–∞–∫–∏ –±–æ—è—Ç—Å—è –±–æ–ª—å—à–µ")

    ####################################################################################################################
    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–∞–∫–æ–ø–∏–≤—à–∏–µ—Å—è –∞–ø–¥–µ–π—Ç—ã –∏ –∑–∞–ø—É—Å–∫–∞–µ–º polling
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)


if __name__ == '__main__':
    try:
        asyncio.run(main())
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    except KeyboardInterrupt:
        logger.warning("Application terminated by the user")
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
    except Exception as error:
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ—à–∏–±–∫–µ
        detailed_send_message_error = traceback.format_exc()
        logger.error(f"Unexpected error in the application: {error}\n{detailed_send_message_error}")