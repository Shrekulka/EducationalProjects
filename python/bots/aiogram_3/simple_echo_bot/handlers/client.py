# simple_echo_bot/handlers/client.py
import traceback

from aiogram import Dispatcher, F
from aiogram.enums import ContentType
from aiogram.filters import Command, ChatMemberUpdatedFilter, KICKED, MEMBER
from aiogram.types import Message, ChatMemberUpdated

from create_bot import bot
from logger import logger
from utils.client_utils import get_successful_payment_data, get_passport_data, get_invoice_data


########################################################################################################################
# 1) –•–µ–Ω–¥–ª–µ—Ä—ã –∫–æ–º–∞–Ω–¥
########################################################################################################################
# @dp.message(Command(commands=["start"]))
async def process_start_command(message: Message) -> None:
    """Handler for the "/start" command.

        Args:
            message (Message): Incoming message object.

        Returns:
            None
    """
    try:
        # –í—ã–≤–æ–¥–∏–º –∞–ø–¥–µ–π—Ç –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
        print(message.model_dump_json(indent=4, exclude_none=True))
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–º–µ–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await bot.send_message(message.from_user.id, f"Hello, {message.from_user.first_name}!"
                                                     f" üëã\nMy name is Echo-bot!\nWrite me something")
        # –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /start –∏–∑ —á–∞—Ç–∞
        await message.delete()
    except Exception as e:
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ—à–∏–±–∫–µ
        detailed_send_message_error = traceback.format_exc()
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
        await message.reply(f"An error occurred: {str(e)}\n{detailed_send_message_error}")


# @dp.message(Command(commands=['help']))
async def process_help_command(message: Message) -> None:
    """Handler for the "/help" command.

        Args:
            message (Message): Incoming message object.

        Returns:
            None
    """
    # –í—ã–≤–æ–¥–∏–º –∞–ø–¥–µ–π—Ç –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
    print(message.model_dump_json(indent=4, exclude_none=True))
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.answer("Write me something and in response\nI will send you your message")


########################################################################################################################
# 2) –ú—É–ª—å—Ç–∏–º–µ–¥–∏–π–Ω—ã–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã (—Å—Ç–∏–∫–µ—Ä—ã, —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –≤–∏–¥–µ–æ, –∞—É–¥–∏–æ, –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ —Ç.–¥.)
########################################################################################################################
# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è —Å—Ç–∏–∫–µ—Ä–æ–≤
# @dp.message(F.sticker) –∏–ª–∏ (F.content_type == 'sticker') –∏–ª–∏ (F.content_type == ContentType.STICKER)
async def handle_sticker(message: Message) -> None:
    """Handler for stickers.

    Args:
        message (Message): Incoming message object.

    Returns:
        None
    """
    # –í—ã–≤–æ–¥–∏–º –∞–ø–¥–µ–π—Ç –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
    print(message.model_dump_json(indent=4, exclude_none=True))
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.reply("Here's your sticker")
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.answer_sticker(sticker=message.sticker.file_id)


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è —Ñ–æ—Ç–æ
# @dp.message(F.photo) –∏–ª–∏ (F.content_type == 'photo') –∏–ª–∏ (F.content_type == ContentType.PHOTO)
async def handle_photo(message: Message) -> None:
    """Handler for photos.

    Args:
        message (Message): Incoming message object.

    Returns:
        None
    """
    # –í—ã–≤–æ–¥–∏–º –∞–ø–¥–µ–π—Ç –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
    print(message.model_dump_json(indent=4, exclude_none=True))
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.reply("Here's your photo")
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤ —á–∞—Ç
    await message.answer_photo(photo=message.photo[-1].file_id)


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –≤–∏–¥–µ–æ
# @dp.message(F.video) –∏–ª–∏ (F.content_type == 'video') –∏–ª–∏ (F.content_type == ContentType.VIDEO)
async def handle_video(message: Message) -> None:
    """Handler for videos.

    Args:
        message (Message): Incoming message object.

    Returns:
        None
    """
    # –í—ã–≤–æ–¥–∏–º –∞–ø–¥–µ–π—Ç –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
    print(message.model_dump_json(indent=4, exclude_none=True))
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.reply("Here's your video")
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ –≤ —á–∞—Ç
    await message.answer_video(video=message.video.file_id)


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –≤–∏–¥–µ–æ-–∑–∞–º–µ—Ç–æ–∫
# @dp.message(F.video_note) –∏–ª–∏ (F.content_type == 'video_note') –∏–ª–∏ (F.content_type == ContentType.VIDEO_NOTE)
async def handle_video_note(message: Message) -> None:
    """Handler for video notes.

    Args:
        message (Message): Incoming message object.

    Returns:
        None
    """
    # –í—ã–≤–æ–¥–∏–º –∞–ø–¥–µ–π—Ç –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
    print(message.model_dump_json(indent=4, exclude_none=True))
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.reply("Here's your video message")
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ-–∑–∞–º–µ—Ç–∫—É –≤ —á–∞—Ç
    await message.answer_video_note(video_note=message.video_note.file_id)


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤
# @dp.message(F.audio) –∏–ª–∏ (F.content_type == 'audio') –∏–ª–∏ (F.content_type == ContentType.AUDIO)
async def handle_audio(message: Message) -> None:
    """Handler for audio files.

    Args:
        message (Message): Incoming message object.

    Returns:
        None
    """
    # –í—ã–≤–æ–¥–∏–º –∞–ø–¥–µ–π—Ç –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
    print(message.model_dump_json(indent=4, exclude_none=True))
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.reply("Here's your audio")
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ—Ñ–∞–π–ª –≤ —á–∞—Ç
    await message.answer_audio(audio=message.audio.file_id)


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
# @dp.message(F.voice) –∏–ª–∏ (F.content_type == 'voice') –∏–ª–∏ (F.content_type == ContentType.VOICE)
async def handle_voice(message: Message) -> None:
    """Handler for voice messages.

    Args:
        message (Message): Incoming message object.

    Returns:
        None
    """
    # –í—ã–≤–æ–¥–∏–º –∞–ø–¥–µ–π—Ç –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
    print(message.model_dump_json(indent=4, exclude_none=True))
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.reply("Here's your voice message")
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç
    await message.answer_voice(voice=message.voice.file_id)


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
# @dp.message(F.document) –∏–ª–∏ (F.content_type == 'document') –∏–ª–∏ (F.content_type == ContentType.DOCUMENT)
async def handle_document(message: Message) -> None:
    """Handler for documents.

    Args:
        message (Message): Incoming message object.

    Returns:
        None
    """
    # –í—ã–≤–æ–¥–∏–º –∞–ø–¥–µ–π—Ç –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
    print(message.model_dump_json(indent=4, exclude_none=True))
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.reply("Here's your document")
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç –≤ —á–∞—Ç
    await message.answer_document(document=message.document.file_id)


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–π
# @dp.message(F.location) –∏–ª–∏ (F.content_type == 'location') –∏–ª–∏ (F.content_type == ContentType.LOCATION)
async def handle_location(message: Message) -> None:
    """Handler for locations.

    Args:
        message (Message): Incoming message object.

    Returns:
        None
    """
    # –í—ã–≤–æ–¥–∏–º –∞–ø–¥–µ–π—Ç –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
    print(message.model_dump_json(indent=4, exclude_none=True))
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.reply("Here's your location")
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤ —á–∞—Ç
    await message.answer_location(latitude=message.location.latitude, longitude=message.location.longitude)


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
# @dp.message(F.contact) –∏–ª–∏ (F.content_type == 'contact') –∏–ª–∏ (F.content_type == ContentType.CONTACT)
async def handle_contact(message: Message) -> None:
    """Handler for contacts.

    Args:
        message (Message): Incoming message object.

    Returns:
        None
    """
    # –í—ã–≤–æ–¥–∏–º –∞–ø–¥–µ–π—Ç –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
    print(message.model_dump_json(indent=4, exclude_none=True))
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.reply("Here's your contact")
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç –≤ —á–∞—Ç
    await message.answer_contact(phone_number=message.contact.phone_number, first_name=message.contact.first_name)


########################################################################################################################
# 3) –•–µ–Ω–¥–ª–µ—Ä—ã –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏ –Ω–∞—á–∞–ª–∞ –∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
########################################################################################################################
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å –ø–æ–ª–Ω—ã–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ–º "Hello"
# @dp.message(F.text == 'Hello') –∏–ª–∏ @dp.message(lambda message: message.text == 'Hello')
async def handle_exact_hello_message(message: Message):
    # –í—ã–≤–æ–¥–∏–º –∞–ø–¥–µ–π—Ç –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
    print(message.model_dump_json(indent=4, exclude_none=True))
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.reply("Here is your written word Hello")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π, –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö—Å—è —Å "Hello"
# @dp.message(F.text.startswith('Hello')) –∏–ª–∏ @dp.message(lambda message: message.text.startswith('Hello')
async def handle_starts_with_hello_message(message: Message):
    # –í—ã–≤–æ–¥–∏–º –∞–ø–¥–µ–π—Ç –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
    print(message.model_dump_json(indent=4, exclude_none=True))
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.reply(f"Here's your sentence that started with the word 'Hello':\n{message.text}")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π, –Ω–µ –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö—Å—è —Å "Hello"
# @dp.message(~F.text.startswith('Hello')) –∏–ª–∏ @dp.message(lambda message: not message.text.startswith('Hello')
async def handle_not_starts_with_hello_message(message: Message):
    # –í—ã–≤–æ–¥–∏–º –∞–ø–¥–µ–π—Ç –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
    print(message.model_dump_json(indent=4, exclude_none=True))
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.reply(f"Here's your sentence that doesn't start with 'Hello':\n{message.text}")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π, –Ω–µ –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—â–∏—Ö—Å—è –Ω–∞ "bot"
# @dp.message(~F.text.endswith('bot')) –∏–ª–∏ @dp.message(lambda message: not message.text.endswith('bot')
async def handle_not_ends_with_bot_message(message: Message):
    # –í—ã–≤–æ–¥–∏–º –∞–ø–¥–µ–π—Ç –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
    print(message.model_dump_json(indent=4, exclude_none=True))
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.reply(f"Here's your sentence that doesn't end with 'bot':\n{message.text}")


# –•–µ–Ω–¥–ª–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞–ø–¥–µ–π—Ç—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID = 173901673
# @dp.message(F.from_user.id == 173901673)
# –∏–ª–∏ @dp.message(lambda message: message.from_user.id == 173901673)
async def handle_specific_user(message: Message):
    # –í—ã–≤–æ–¥–∏–º –∞–ø–¥–µ–π—Ç –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
    print(message.model_dump_json(indent=4, exclude_none=True))
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.reply(f"The following message was sent from {message.from_user.id}:\n{message.text}")


# –•–µ–Ω–¥–ª–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞–ø–¥–µ–π—Ç—ã –æ—Ç –∞–¥–º–∏–Ω–æ–≤ –∏–∑ —Å–ø–∏—Å–∫–∞ 193905674, 173901673, 144941561
# @dp.message(F.from_user.id.in_({193905674, 173901673, 144941561})
# –∏–ª–∏ @dp.message(lambda message: message.from_user.id in {193905674, 173901673, 144941561})
async def handle_admins(message: Message):
    # –í—ã–≤–æ–¥–∏–º –∞–ø–¥–µ–π—Ç –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
    print(message.model_dump_json(indent=4, exclude_none=True))
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.reply(f"The following message was sent from an admin {message.from_user.id}: {message.text}")


# –•–µ–Ω–¥–ª–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å –∞–ø–¥–µ–π—Ç—ã –ª—é–±–æ–≥–æ —Ç–∏–ø–∞, –∫—Ä–æ–º–µ —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –∞—É–¥–∏–æ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
# @dp.message(~F.content_type.in_({ContentType.PHOTO, ContentType.VIDEO, ContentType.AUDIO, ContentType.DOCUMENT})
# –∏–ª–∏ @dp.message(lambda message: not message.content_type in {ContentType.PHOTO, ContentType.VIDEO, ContentType.AUDIO,
# ContentType.DOCUMENT}
async def handle_non_media(message: Message):
    # –í—ã–≤–æ–¥–∏–º –∞–ø–¥–µ–π—Ç –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
    print(message.model_dump_json(indent=4, exclude_none=True))
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.reply(f"The following message was sent that is not a photo, video, audio or document: {message.text}")


########################################################################################################################
# 4) –ö–æ–º–±–∏–Ω–∞—Ü–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤
########################################################################################################################
# –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–Ω—ã–π —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞ "invoice", "passport_data" –∏–ª–∏ "successful_payment"
# @dp.message(F.content_type.in_({'invoice', 'passport_data', 'successful_payment'})) –∏–ª–∏
# @dp.message(F.content_type.in_({ContentType.INVOICE, ContentType.PASSPORT_DATA, ContentType.SUCCESSFUL_PAYMENT}))
async def process_send_vovite(message: Message) -> None:
    """
        Handler for processing different types of messages: "invoice", "passport_data", "successful_payment".

        Args:
            message (Message): Incoming message object.

        Returns:
            None
    """
    # –ï—Å–ª–∏ —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è - 'invoice'
    if message.content_type == ContentType.INVOICE:  # if message.content_type == 'invoice'
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å—á–µ—Ç–µ
        invoice_data = await get_invoice_data(message)
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å—á–µ—Ç–µ –≤ —á–∞—Ç
        await message.answer(text=f"Here's your invoice data: {invoice_data}")

    # –ï—Å–ª–∏ —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è - 'passport_data'
    elif message.content_type == ContentType.PASSPORT_DATA:  # elif message.content_type == 'passport_data':
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–∞—Å–ø–æ—Ä—Ç–∞
        passport_data = await get_passport_data(message)
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–∞—Å–ø–æ—Ä—Ç–∞ –≤ —á–∞—Ç
        await message.answer(text=f"Here's your passport data: {passport_data}")

    # –ï—Å–ª–∏ —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è - 'successful_payment'
    elif message.content_type == ContentType.SUCCESSFUL_PAYMENT:  # elif message.content_type == 'successful_payment':
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç–µ
        payment_data = await get_successful_payment_data(message)
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç–µ –≤ —á–∞—Ç
        await message.answer(text=f"Here's your payment data: {payment_data}")


########################################################################################################################
# 5) –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–ø–∏–π —Å–æ–æ–±—â–µ–Ω–∏–π, –Ω–µ –∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ç–∏–ø–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
########################################################################################################################
# –£ aiogram –µ—Å—Ç—å –≥–æ—Ç–æ–≤—ã–π –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–∏—Ç –≤ —á–∞—Ç –∫–æ–ø–∏—é —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–µ –∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ç–∏–ø–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (Audio, Video,
# Sticker, Animation, Document, Voice).
# @dp.message()
async def send_copy_message(message: Message) -> None:
    """
       Handler to send a copy of the message.

       Args:
           message (Message): Incoming message object.

       Returns:
           None
    """
    # –í—ã–≤–æ–¥–∏–º –∞–ø–¥–µ–π—Ç –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
    print(message.model_dump_json(indent=4, exclude_none=True))
    try:
        # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await message.reply("Here is your response from the send_copy handler")
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–ø–∏—é —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç
        await message.send_copy(chat_id=message.chat.id)  # await message.copy_to(chat_id=message.chat.id)
    except TypeError:
        await message.reply(text="This type of update is not supported by the send_copy method")


########################################################################################################################
# 6) –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
########################################################################################################################
# @dp.message()
async def handle_other_messages(message: Message) -> None:
    """Handler for text messages.

    Args:
        message (Message): Incoming message object.

    Returns:
        None
    """
    # –í—ã–≤–æ–¥–∏–º –∞–ø–¥–µ–π—Ç –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
    print(message.model_dump_json(indent=4, exclude_none=True))
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.reply(text=f"You wrote me such a message:\n{message.text}\nand I write you the same thing")


########################################################################################################################
# 7) –•–µ–Ω–¥–ª–µ—Ä—ã –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –±–æ—Ç–∞
########################################################################################################################
# –ò–Ω–æ–≥–¥–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –∫–æ—Ç–æ—Ä—ã–µ –∫–æ–≥–¥–∞-–ª–∏–±–æ –∑–∞–ø—É—Å–∫–∞–ª–∏ –±–æ—Ç–∞. –†–µ–∫–ª–∞–º–Ω—É—é –∏–ª–∏ —Å
# –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ–º –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≥—Ä–∞—Ñ–∏–∫–∞ —Ä–∞–±–æ—Ç—ã, –∏–ª–∏ —Å –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ–º–∞—Ü–∏–µ–π, –Ω–µ —Å—É—Ç—å. –ú—ã –≥–¥–µ-—Ç–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ö—Ä–∞–Ω—è–ª–∏ –≤—Å–µ—Ö
# –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ–≥–¥–∞ –æ–Ω–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –∫–æ–º–∞–Ω–¥—É /start –∏ —Ç–µ–ø–µ—Ä—å —Ö–æ—Ç–∏–º –∏—Ö –æ —á–µ–º-—Ç–æ –æ–ø–æ–≤–µ—Å—Ç–∏—Ç—å. –ù–æ —á–∞—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞—Ç–µ–º
# –º–æ–≥–ª–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Ç–∞–∫–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ –æ—à–∏–±–∫–µ. –ë–æ—Ç –∏–∑-–∑–∞ –Ω–µ–µ, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –Ω–µ
# —É–ø–∞–¥–µ—Ç, –Ω–æ –Ω–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Ä–µ—Å—É—Ä—Å—ã –±—É–¥–µ—Ç, –µ—Å–ª–∏ –º—ã –∫–∞–∂–¥—ã–π —Ä–∞–∑ –±—É–¥–µ–º –ø—ã—Ç–∞—Ç—å—Å—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–∞–∫–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å–æ–æ–±—â–µ–Ω–∏—è.
# –ü—Ä–∞–≤–∏–ª—å–Ω–µ–µ –≤–µ—Å—Ç–∏ —É—á–µ—Ç —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞. –¢–æ –µ—Å—Ç—å –ø—Ä–∏—à–µ–ª –∞–ø–¥–µ–π—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∫–æ–º–∞–Ω–¥–æ–π /start - –¥–æ–±–∞–≤–∏–ª–∏
# –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–º–µ—Ç–∫–æ–π Active, –ø—Ä–∏—à–µ–ª –∞–ø–¥–µ–π—Ç –æ —Ç–æ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞ - –ø–æ–º–µ–Ω—è–ª–∏ –µ–º—É
# —Å—Ç–∞—Ç—É—Å –Ω–∞ Inactive, —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–æ—Ç–∞ - —Å–Ω–æ–≤–∞ Active –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ. –ê –∫–æ–≥–¥–∞ –¥–µ–ª–∞–µ–º —Ä–∞—Å—Å—ã–ª–∫—É - —Å–º–æ—Ç—Ä–∏–º –Ω–∞
# —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Ö, –∫—Ç–æ Inactive. –£–≤–µ—Ä–µ–Ω, –∏–¥–µ—è –ø–æ–Ω—è—Ç–Ω–∞.

# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –±–æ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
# @dp.my_chat_member(ChatMemberUpdatedFilter(member_status_changed=KICKED))
async def process_user_blocked_bot(event: ChatMemberUpdated) -> None:
    """
        Handler triggered when a user blocks the bot.

        Args:
            event (ChatMemberUpdated): Incoming chat member update event.

        Returns:
            None
    """
    logger.info(f"User {event.from_user.id} blocked the bot")


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É –±–æ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
# @dp.my_chat_member(ChatMemberUpdatedFilter(member_status_changed=MEMBER))
async def process_user_unblocked_bot(event: ChatMemberUpdated) -> None:
    """
    Handler triggered when a user unblocks the bot.

    Args:
        event (ChatMemberUpdated): The event of chat member update.

    Returns:
        None
    """
    logger.info(f"User {event.from_user.id} unblocked the bot")
    await bot.send_message(chat_id=event.from_user.id, text=f"{event.from_user.first_name}, Welcome back!")


########################################################################################################################
# 8) –•–µ–Ω–¥–ª–µ—Ä—ã –¥–ª—è
########################################################################################################################


########################################################################################################################
# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤ –∏ –ø–µ—Ä–µ–¥–∞—á–∞ –∏—Ö –≤ —Ñ–∞–π–ª bot_telegram
def register_handlers_client(dp: Dispatcher) -> None:
    """
        Register all handlers for the client part of the bot.

        Args:
            dp: The Dispatcher instance.
    """
    # 1) –•–µ–Ω–¥–ª–µ—Ä—ã –∫–æ–º–∞–Ω–¥
    dp.message.register(process_start_command, Command(commands='start'))  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã "/start"
    dp.message.register(process_help_command, Command(commands='help'))  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã "/help"
    ####################################################################################################################
    # 2) –ú—É–ª—å—Ç–∏–º–µ–¥–∏–π–Ω—ã–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã (—Å—Ç–∏–∫–µ—Ä—ã, —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –≤–∏–¥–µ–æ, –∞—É–¥–∏–æ, –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ —Ç.–¥.)
    dp.message.register(handle_sticker, F.sticker)  # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∏–∫–µ—Ä–æ–≤
    # (F.sticker) –∏–ª–∏ (F.content_type == 'sticker') –∏–ª–∏ (F.content_type == ContentType.STICKER)
    dp.message.register(handle_photo, F.photo)  # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    # (F.photo) –∏–ª–∏ (F.content_type == 'photo') –∏–ª–∏ (F.content_type == ContentType.PHOTO)
    dp.message.register(handle_video, F.video)  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ
    # (F.video) –∏–ª–∏ (F.content_type == 'video') –∏–ª–∏ (F.content_type == ContentType.VIDEO)
    dp.message.register(handle_video_note, F.video_note)  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ-–∑–∞–º–µ—Ç–æ–∫
    # (F.video_note) –∏–ª–∏ (F.content_type == 'video_note') –∏–ª–∏ (F.content_type == ContentType.VIDEO_NOTE)
    dp.message.register(handle_audio, F.audio)  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—É–¥–∏–æ—Å–æ–æ–±—â–µ–Ω–∏–π
    # (F.audio) –∏–ª–∏ (F.content_type == 'audio') –∏–ª–∏ (F.content_type == ContentType.AUDIO)
    dp.message.register(handle_voice, F.voice)  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    # (F.voice) –∏–ª–∏ (F.content_type == 'voice') –∏–ª–∏ (F.content_type == ContentType.VOICE)
    dp.message.register(handle_document, F.document)  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    # (F.document) –∏–ª–∏ (F.content_type == 'document') –∏–ª–∏ (F.content_type == ContentType.DOCUMENT)
    dp.message.register(handle_location, F.location)  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–π
    # (F.location) –∏–ª–∏ (F.content_type == 'location') –∏–ª–∏ (F.content_type == ContentType.LOCATION)
    dp.message.register(handle_contact, F.contact)  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
    # (F.contact) –∏–ª–∏ (F.content_type == 'contact') –∏–ª–∏ (F.content_type == ContentType.CONTACT)
    ####################################################################################################################
    # 3)  –•–µ–Ω–¥–ª–µ—Ä—ã –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏ –Ω–∞—á–∞–ª–∞ –∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
    dp.message.register(handle_exact_hello_message, F.text == 'Hello')  # –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π,
    # –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö—Å—è —Å "Hello"
    # –∏–ª–∏ (lambda message: message.text == 'Hello')
    dp.message.register(handle_starts_with_hello_message, F.text.startswith('Hello'))  # –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö
    # —Å–æ–æ–±—â–µ–Ω–∏–π, –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö—Å—è —Å "Hello"
    # –∏–ª–∏ (lambda message: message.text.startswith('Hello')
    dp.message.register(handle_not_starts_with_hello_message, ~F.text.startswith('Hello'))  # –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö
    # —Å–æ–æ–±—â–µ–Ω–∏–π, –Ω–µ –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö—Å—è —Å "Hello"
    # –∏–ª–∏ (lambda message: not message.text.startswith('Hello')
    dp.message.register(handle_not_ends_with_bot_message, ~F.text.endswith('bot'))  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö
    # —Å–æ–æ–±—â–µ–Ω–∏–π,–Ω–µ –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—â–∏—Ö—Å—è –Ω–∞ "bot"
    # –∏–ª–∏ (lambda message: not message.text.endswith('bot')
    dp.message.register(handle_specific_user, F.from_user.id == 173901673)  # –•–µ–Ω–¥–ª–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å —Ç–æ–ª—å–∫–æ
    # –∞–ø–¥–µ–π—Ç—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID = 173901673
    # –∏–ª–∏ (lambda message: message.from_user.id == 173901673)
    dp.message.register(handle_admins, F.from_user.id.in_({193905674, 173901673, 144941561}))  # –•–µ–Ω–¥–ª–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π
    # –±—É–¥–µ—Ç –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞–ø–¥–µ–π—Ç—ã –æ—Ç –∞–¥–º–∏–Ω–æ–≤ –∏–∑ —Å–ø–∏—Å–∫–∞ 193905674, 173901673, 144941561
    # –∏–ª–∏ @ dp.message(lambda message: message.from_user.id in {193905674, 173901673, 144941561})
    dp.message.register(handle_non_media, ~F.content_type.in_({ContentType.PHOTO, ContentType.VIDEO, ContentType.AUDIO,
                                                               ContentType.DOCUMENT}))  # –•–µ–Ω–¥–ª–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç
    # –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å –∞–ø–¥–µ–π—Ç—ã –ª—é–±–æ–≥–æ —Ç–∏–ø–∞, –∫—Ä–æ–º–µ —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –∞—É–¥–∏–æ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    # –∏–ª–∏ @dp.message(lambda message: not message.content_type in {ContentType.PHOTO, ContentType.VIDEO,
    # ContentType.AUDIO, ContentType.DOCUMENT}

    ####################################################################################################################
    # 4) –ö–æ–º–±–∏–Ω–∞—Ü–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤
    dp.message.register(process_send_vovite, (F.content_type.in_({'invoice', 'passport_data', 'successful_payment'})))
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ —Å—á–µ—Ç–∞—Ö, –¥–∞–Ω–Ω—ã–º –ø–∞—Å–ø–æ—Ä—Ç–æ–≤ –∏–ª–∏ —É—Å–ø–µ—à–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–∞—Ö
    # –∏–ª–∏ (F.content_type.in_({ContentType.INVOICE, ContentType.PASSPORT_DATA, ContentType.SUCCESSFUL_PAYMENT}))
    ####################################################################################################################
    # 5) –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–ø–∏–π —Å–æ–æ–±—â–µ–Ω–∏–π, –Ω–µ –∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ç–∏–ø–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    dp.message.register(send_copy_message)  # –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–ø–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    ####################################################################################################################
    # 6) –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    dp.message.register(handle_other_messages)  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ—á–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    ####################################################################################################################
    # 7) –•–µ–Ω–¥–ª–µ—Ä—ã –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –±–æ—Ç–∞
    dp.message.register(process_user_blocked_bot, ChatMemberUpdatedFilter(member_status_changed=KICKED))  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫
    # –¥–ª—è —Å–æ–±—ã—Ç–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —á–∞—Ç–∞, –∫–æ–≥–¥–∞ —É—á–∞—Å—Ç–Ω–∏–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞.
    dp.message.register(process_user_unblocked_bot, ChatMemberUpdatedFilter(member_status_changed=MEMBER))  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫
    # –¥–ª—è —Å–æ–±—ã—Ç–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —á–∞—Ç–∞, –∫–æ–≥–¥–∞ —É—á–∞—Å—Ç–Ω–∏–∫ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞.
    ####################################################################################################################
