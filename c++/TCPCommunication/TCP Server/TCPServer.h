//
// Created by Shrekulka on 28.06.2023.
//
#pragma once

#include "pch.h"

#ifndef TCP_SERVER_TCPSERVER_H
#define TCP_SERVER_TCPSERVER_H

/*
Класс `TCPServer` представляет TCP-сервер, который обрабатывает подключения клиентов и обеспечивает обмен данными между
клиентами и сервером по протоколу TCP. Он выполняет следующие функции:

1. Устанавливает и привязывает сокет сервера к заданному адресу и порту.
2. Принимает входящие подключения от клиентов и создает отдельный сокет для каждого клиента.
3. Взаимодействует с объектом `ConnectionHandler`, который предоставляет обработку данных, поступающих от клиентов.
4. Отправляет приветственное сообщение клиентам при установлении соединения.
5. Передает данные от клиентов объекту `ConnectionHandler` для обработки.
6. Продолжает обработку команд, пока не будет указано завершение или происходит ошибка.
7. Закрывает соединение с клиентом после завершения обработки.

Таким образом, класс `TCPServer` обеспечивает функциональность TCP-сервера и координирует взаимодействие с клиентами
через объект `ConnectionHandler`.
*/

class TCPServer
{
public:
	// Конструктор класса TCPServer. Принимает порт (port), адрес (address) и ссылку на объект ConnectionHandler
	// (connection).
	TCPServer(int port, const std::string& address, ConnectionHandler& connection);

	// Деструктор класса
	~TCPServer();

	// Метод класса TCPServer, который начинает прослушивание подключений.
	void listen();

protected:
	// Максимальное количество ожидающих подключений
	static const int MAXPENDING = 5;

	// Дескриптор сокета для сервера.
	int socket;

	// Ссылка на экземпляр класса ConnectionHandler, который обрабатывает соединения с клиентами.
	ConnectionHandler& connection;
};


#endif //TCP_SERVER_TCPSERVER_H
