// Нахождение мода числа; мод - это такое значение, которое повторяется в массиве большее количество раз

// Данный код находит моду (такое значение, которое встречается в массиве наибольшее количество раз) в динамическом
// массиве, заполненном случайными числами от 0 до 49. Пользователь вводит размер массива. Для генерации случайных чисел
// используется класс std::random_device, который инициализирует генератор случайных чисел std::mt19937. Создается
// объект распределения чисел в диапазоне от 0 до 49. Затем массив заполняется случайными числами, которые выводятся на
// экран. Далее подсчитывается количество повторений каждого числа в массиве. Для этого используется двойной цикл for,
// который сравнивает каждый элемент массива с другими элементами. Количество повторений каждого числа сохраняется в
// отдельном массиве moda. Затем находится индекс числа, которое встречается наибольшее количество раз, и выводится на
// экран. После окончания работы с массивом он удаляется из памяти.

#include <iostream>
#include <random>

int main()
{
	// Инициализация генератора случайных чисел с использованием std::random_device
	std::random_device rd;
	std::mt19937 gen(rd());

	// Создание распределения случайных чисел от 0 до 49
	std::uniform_int_distribution<int> dist(0, 49);

	int size = 0;

	std::cout << "Enter the size of the array = ";
	std::cin >> size;

	int *pmas = new int[size]{}; // Создание динамического массива с размером, заданным пользователем
	size_t i {}, j {};

	// Заполнение массива случайными числами
	for (i = 0; i < size; i++)
	{
		pmas[i] = dist(gen);
	}

	// Вывод содержимого массива
	for (i = 0; i < size; i++)
	{
		std::cout << "Array [ " << i << " ] = " << pmas[i] << '\n';
	}

	int moda[size]; // Создание массива для подсчета моды
	int count {};

	// Подсчет повторений каждого числа в массиве
	for (i = 0; i < size; ++i)
	{
		for (j = 0; j < size; ++j)
		{
			if (pmas[j] == pmas[i])
			{
				count++;
				moda[i] = count;
			}
		}
		count = 0; // Обнуление счетчика перед проверкой следующего числа
	}

	std::cout << '\n';

	int maxx = moda[0]; // Первое значение моды считается максимальным

	// Вывод количества повторений каждого числа
	for (i = 0; i < size; ++i)
	{
		std::cout << "Moda [ " << i << " ] = " << moda[i] << '\n';
		if (moda[i] > maxx)
		{
			maxx = moda[i];
			count = i; // Запоминание индекса числа с наибольшей модой
		}
	}

	// Вывод числа с наибольшей модой и количества повторений
	std::cout << "Max moda = " << pmas[count] << " repeats " << maxx << " times" << '\n';

	delete[] pmas; // Освобождение памяти, выделенной для массива

	return 0;
}
