#include <iostream>

using namespace std;

// В английской системе мер основными единицами измерения длины служат фут и дюйм, причем один фут равен 12 дюймам.
// Расстояние, равное 15 футам и 8 дюймам, записывается как 15'-8". Дефис в данной записи не означает знак «минус», а
// служит для разделения значений футов и дюймов.

// Предположим, вам необходимо создать инженерный проект с использованием английской системы мер. Было бы удобно представлять
// длины в виде двух чисел, одно из которых равнялось бы количеству футов, а другое — количеству дюймов. В следующем
// примере, ENGLSTRC, такая идея реализована с помощью структуры. Мы покажем, как можно при помощи типа Distance складывать
// две длины.

// длина в английской системе
struct Distance
{
	int feet;
	float inches;
};

int main()
{
// определения двух переменных
	Distance d1, d3;
// определение с инициализацией
	Distance d2 = { 11, 6.25 };
	cout << "\nВведите число футов: ";
// ввод полей переменной d1
	cin >> d1.feet;
	cout << "Введите число дюймов: ";
	cin >> d1.inches;
// сложение длин d1 и d2 и присвоение результата d3 (сложение дюймов с возможным заемом)
	d3.inches = d1.inches + d2.inches;
	d3.feet = 0;
// если сумма больше 12.0,
	if (d3.inches >= 12.0)
	{
		// то уменьшаем число дюймов на 12.0 и
		d3.inches -= 12.0;
		// увеличиваем число футов на 1
		d3.feet++;
	}
// сложение футов вывод всех длин на экран
	d3.feet += d1.feet + d2.feet;
	cout << d1.feet << "\'-" << d1.inches << "\" + ";
	cout << d2.feet << "\'-" << d2.inches << "\" = ";
	cout << d3.feet << "\'-" << d3.inches << "\"\n";
	return 0;
}
