#include <iostream>
#include <random>


using namespace std;


// Цифровая елочка.

// Новогодняя елочка состоит из цифр. На первой строке записана высота елочки - натуральное число от 1 до 100.
// Далее на N строчках зарисована сама елочка, сначала 1 цифра, затем 2, на последней строке - N цифр через пробел.
// В начале и в конце каждой строки могут быть пробелы, чтобы елочка получилась красивой.
// Гирляндой называется последовательность цифр, которую можно получить спускаясь от верхушки елки до ее подножья,
// каждый раз смещаясь либо влево-вниз, либо вправо-вниз.
// Найти гирлянду с максимальной суммой цифр. Вывести одно число - максимальную сумму найденной гирлянды.

int main()
{
	random_device rd; // Создание объекта для генерации случайных чисел
	mt19937 gen(rd()); // Создание генератора случайных чисел с использованием random_device
	uniform_int_distribution<> dis(0, 9); // Создание распределения для генерации случайных чисел в диапазоне от 0 до 9

	int i {}, j {}, n {};

	int tree[100][100] {}; // Объявление массива для хранения елочки

	cout << "Enter the height of the garland = ";
	cin >> n;

	// Заполнение элемента случайным числом
	for (i = 0; i < n; ++i)
	{
		for (j = 0; j <= i; ++j)
		{
			tree[i][j] = dis(gen);
		}
	}

	// Цикл для вывода елочки на экран
	for (i = 0; i < n; ++i)
	{
		for (j = 0; j <= i; ++j)
		{
			cout << tree[i][j] << ' ';
		}
		cout << '\n';
	}

	// Цикл для вычисления максимальной суммы гирлянды
	for (i = n - 2; i >= 0; --i)
	{
		for (j = 0; j <= i; ++j)
		{
			tree[i][j] += max(tree[i + 1][j], tree[i + 1][j + 1]);
		}
	}

	cout << "\nThe maximum sum of the found garland is " << tree[0][0] << '\n';

	return 0;
}