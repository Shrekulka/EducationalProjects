// Быстрая сортировка в порядке возрастания.

// В начале кода подключаются необходимые заголовочные файлы, включая <iostream> и <random>, которые используются для
// ввода-вывода данных и генерации случайных чисел соответственно.
// Затем в функции main инициализируется генератор случайных чисел с помощью std::random_device и std::mt19937.
// Создается распределение случайных чисел от 0 до 49 с помощью std::uniform_int_distribution.
// Пользователю предлагается ввести размер массива, который сохраняется в переменную size. Затем выделяется динамическая
// память для массива типа int размером size с помощью оператора new.
// Далее происходит заполнение массива случайными числами с использованием генератора случайных чисел и распределения.
// Затем массив выводится на экран перед сортировкой.
// Функция std::sort вызывается для сортировки массива в порядке возрастания. Передаются указатели на первый и последний
// элементы массива.
// После сортировки массива, отсортированный массив выводится на экран.
// Наконец, выделенная динамическая память освобождается с помощью оператора delete[].
// Таким образом, код реализует быструю сортировку для массива в порядке возрастания с использованием случайных чисел
// для заполнения и выводит отсортированный массив на экран.

#include <iostream>
#include <random>

int main()
{
	// Инициализация генератора случайных чисел с использованием std::random_device
	std::random_device rd;
	std::mt19937 gen(rd());

	// Создание распределения случайных чисел от 0 до 49
	std::uniform_int_distribution<int> dist(0, 49);

	int size {};
	size_t i {};

	// Запрашиваем размер массива у пользователя
	std::cout << "Enter the size of the array = ";
	std::cin >> size;

	// Выделяем память для массива и инициализируем его случайными числами
	int* pmas = new int[size] {};

	for (i = 0; i <= size; i++)
	{
		pmas[i] = dist(gen);
	}

	// Выводим содержимое массива до сортировки
	std::cout << "\nBefore sort:\n";
	for (i = 0; i <= size; i++)
	{
		std::cout << pmas[i] << ' ';
	}

	// Сортируем массив с помощью функции std::sort
	std::sort(pmas, pmas + size + 1);

	// Выводим содержимое массива после сортировки
	std::cout << "\n\nThe resulting array looks like :\n";
	for (i = 0; i <= size; i++)
	{
		std::cout << pmas[i] << ' ';
	}

	// Освобождаем память, выделенную под массив
	delete[] pmas;

	return 0;
}
