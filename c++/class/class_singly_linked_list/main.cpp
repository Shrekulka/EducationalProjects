#include "pch.h"

int main()
{
	List<int> lst;  // Создаем экземпляр класса List с типом элементов int

	lst.push_back(5);  // Добавляем элемент со значением 5 в конец списка

	lst.push_back(10);  // Добавляем элемент со значением 10 в конец списка

	lst.push_back(22);  // Добавляем элемент со значением 22 в конец списка

	lst.push_front(0);  // Добавляем элемент со значением 0 в начало списка

	lst.insert(99, 1);  // Вставляем элемент со значением 99 на позицию 1 в списке

	lst.removeAT(3);  // Удаляем элемент на позиции 3 в списке (индексация начинается с 0)

	cout << "Размер списка: " << lst.getSize() << '\n';  // Выводим размер списка (количество элементов)

	cout << "Список: ";
	// Цикл для вывода всех элементов списка
	for (int i = 0; i < lst.getSize(); ++i)
	{
		cout << lst[i] << ' ';
	}
	cout << '\n';

	cout << "Элемент на позиции 1: " << lst[1] << '\n' << '\n';  // Выводим значение элемента на позиции 1

	srand(time(nullptr));  // Инициализируем генератор случайных чисел

	int numbersCount = 10;  // Количество случайных чисел для добавления в список

	// Цикл для добавления случайных чисел в список
	for (int i = 0; i < numbersCount; ++i)
	{
		lst.push_back(1 + rand() % 10);
	}

	cout << "Список: ";
	// Цикл для вывода всех элементов списка
	for (int i = 0; i < lst.getSize(); ++i)
	{
		cout << lst[i] << ' ';
	}
	cout << '\n';

	lst.pop_front();  // Удаляем первый элемент списка

	cout << "Список после удаления первого элемента: ";

	// Цикл для вывода всех элементов списка
	for (int i = 0; i < lst.getSize(); ++i)
	{
		cout << lst[i] << ' ';
	}
	cout << '\n' << '\n';

	lst.clear();  // Очищаем список (удаляем все элементы)

	cout << "Размер списка после очистки: " << lst.getSize() << '\n';  // Выводим размер списка (должен быть 0)
	cout << '\n';

	return 0;
}
